// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Pavel Utkin",
            "url": "https://t.me/utkin_pawka",
            "email": "pavel@utkin-pro.ru"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/employee/find{searchString}": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "GET"
                ],
                "summary": "Найти сотрудника по ФИО.",
                "operationId": "findGet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ФИО",
                        "name": "searchString",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/employee/get-number-of-vacation-days{employeeID}": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "GET"
                ],
                "summary": "Получить количество дней отпуска.",
                "operationId": "getNumberOfVacationDaysGet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "идентификатор сотрудника",
                        "name": "employeeID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/employee/hire": {
            "post": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "POST"
                ],
                "summary": "Нанять сотрудника.",
                "operationId": "hirePOST",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ФИО",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Пол",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Возраст",
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Телефон",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Электронная почта",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Адрес прописки",
                        "name": "address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "description": "\"микросервис по сотрудникам\"",
            "name": "Update"
        },
        {
            "description": "\"микросервис по сотрудникам\"",
            "name": "Value"
        },
        {
            "description": "\"микросервис по сотрудникам\"",
            "name": "Static"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "employees-manager",
	Description:      "микросервис по сотрудникам",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
